source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/etc/overshoot.R", echo=TRUE)
source('C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/parameters.R')
source('C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_sim.R')
source('C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/parameters.R')
source('C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_sim.R')
setwd('C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main')
source('./parameters.R')
source('./mod_sim.R')
setwd('C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main')
source('./parameters.R')
pacman::p_load(tidyverse, rio, deSolve, reshape2)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_sim.R", echo=TRUE)
source('./mod_sim.R')
setwd('C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main')
source('./parameters.R')
source('./mod_sim.R')
source('./obs.R')
source('./obs.R')
source('./parameters.R')
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/obs.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_sim.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_no4.4.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/etc/overshoot.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/etc/overshoot.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/etc/overshoot.R", echo=TRUE)
ggplot(data = df_long, aes(x = time, y = value/1E6, group=variable, colour = variable))+
geom_line()+
geom_vline(xintercept=49, linetype=3, alpha = 0.5)+
geom_vline(xintercept=65, linetype=3, alpha = 0.5)+
geom_hline(yintercept=h1/1E6, linetype=1, colour = '#F8766D', alpha = 0.6)+
geom_hline(yintercept=h2/1E6, linetype=1, colour = "#00BFC4", alpha = 0.6)+
geom_hline(yintercept=f1/1E6, linetype=1, colour = '#F8766D', alpha = 0.6)+
geom_hline(yintercept=f2/1E6, linetype=1, colour = "#00BFC4", alpha = 0.6)+
theme_classic2(base_size=12)+
scale_x_continuous(breaks = c(0, 49, 65, 165))+
labs(x = 'Time (day)', y = 'Number of individuals per million people',
colour = 'Key')+
scale_y_break(c(10, 120), scales = 1.5)
###### ANALYSE: TOTAL POPULATION
#--0. Functions
cumt <- function(x){
cumt = cumsum(x$Dt_per_m)[166]
return(as.numeric(cumt))
}
pkcase <- function(x){
pk = as.data.frame(x %>%
filter(Dt_per_m == max(Dt_per_m)))
return(pk$Dt_per_m)
}
pktime <- function(x){
pk = as.data.frame(x %>%
filter(Dt_per_m == max(Dt_per_m)))
return(pk$time)
}
cumt(output2_no_c4.4)
#--1. Cumulative cases
#---1.2 with c4.4 lifted
cum_t_no_c4.4 <- output2_no_c4.4 %>%
summarise(sum = sum(Dt_per_m))
cum_t_no_c4.4 <- as.numeric(cum_t_no_c4.4$sum)
cum_t_no_c4.4
#--2. Peak cases & time
#---2.2 with c4.4 lifted
max_t_no_c4.4 <- pkcase(output2_no_c4.4)
###### ANALYSE
#--0. Functions
cumt <- function(x){
cumt = cumsum(x$Dt_per_m)[166]
return(as.numeric(cumt))
}
pkcase <- function(x){
pk = as.data.frame(x %>%
filter(Dt_per_m == max(Dt_per_m)))
return(pk$Dt_per_m)
}
pktime <- function(x){
pk = as.data.frame(x %>%
filter(Dt_per_m == max(Dt_per_m)))
return(pk$time)
}
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_no2.2.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_no4.3.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_sim_c4.3_long.R", echo=TRUE)
source("C:/Users/hanna/OneDrive - London School of Hygiene and Tropical Medicine/3_summer/script/fin/epic-om/main/mod_no4.3.R", echo=TRUE)
###### PLOT
p0 <- ggplot()
grid.arrange(p4.3, p4.3_long, p4.4, p0, nrow=2, ncol=2, left = yleft, bottom = bottom, respect = T)
###### PLOT
p0 <- ggplot()+
element_blank()
###### PLOT
p0 <- ggplot()+
theme(plot.background = element_blank())
grid.arrange(p4.3, p4.3_long, p4.4, p0, nrow=2, ncol=2, left = yleft, bottom = bottom, respect = T)
###### PLOT
p0 <- ggplot()+
theme(axis.line = element_blank())
grid.arrange(p4.3, p4.3_long, p4.4, p0, nrow=2, ncol=2, left = yleft, bottom = bottom, respect = T)
###### PLOT
#--Empty plot
p0 <- ggplot()
p4.3 <- ggplot() +
geom_line(data = output2_no_c4.3, aes(x=time, y=Dt_per_m, colour='red'))+
geom_line(data=output2_sim_c4.3, aes(x=time, y=Dt_per_m, colour = 'black'),linetype=2)+
labs(x = 'Time (day)', y = 'Daily confirmed incident cases\n(per million people)\n')+
scale_x_continuous(breaks=c(0, 50, 165))+
ggtitle('(A)')+
scale_y_continuous(n.breaks=10)+
theme_classic2(base_size =10)+
theme(axis.title = element_blank(), plot.title = element_text(size=10), legend.position="None")#+
p4.3_long <- ggplot() +
geom_line(data = output2_no_c4.3, aes(x=time, y=Dt_per_m, colour='red'))+
geom_line(data=output2_sim_c4.3_long, aes(x=time, y=Dt_per_m, colour='black'),linetype=2)+
labs(x = 'Time (day)', y = 'Daily confirmed incident cases\n(per million people)\n')+
scale_x_continuous(breaks=c(0, 50, 165))+
scale_y_continuous(n.breaks=10)+
ggtitle('(B)')+
theme_classic2(base_size =10)+
theme(axis.title = element_blank(), plot.title = element_text(size=10), legend.position="None")#+
###### COMPARE WITH c4.4
yleft <- textGrob('Daily confirmed incident cases\n(per million people)', rot = 90, gp = gpar(fontsize = 10))
bottom <- textGrob('Time (day)', gp = gpar(fontsize = 10))
grid.arrange(p4.3, p4.3_long, p4.4, p0, nrow=2, ncol=2, left = yleft, bottom = bottom, respect = T)
###### ANALYSE: c4.3
#--0. Functions
cumt <- function(x){
cumt = cumsum(x$Dt_per_m)[166]
return(as.numeric(cumt))
}
pkcase <- function(x){
pk = as.data.frame(x %>%
filter(Dt_per_m == max(Dt_per_m)))
return(pk$Dt_per_m)
}
pktime <- function(x){
pk = as.data.frame(x %>%
filter(Dt_per_m == max(Dt_per_m)))
return(pk$time)
}
#--1. Cumulative cases
#---1.1 baseline (all interventions in place)
cum_t_sim_c4.3 <- cumt(output2_sim_c4.3)
#---1.2 with c4.3 lifted
cum_t_no_c4.3 <- cumt(output2_no_c4.3)
#--2. Peak cases & time
#---2.1 baseline (all interventions in place)
pk_t_sim_c4.3_time <- pktime(output2_sim_c4.3)
pk_t_sim_c4.3_case <- pkcase(output2_sim_c4.3)
#---2.2 with c4.3 lifted
pk_t_no_c4.3_time <- pktime(output2_no_c4.3)
pk_t_no_c4.3_case <- pkcase(output2_no_c4.3)
##### ANALYSE: c4.3_long
#--1. Cumulative cases
#---1.1 baseline (all interventions in place)
cum_t_sim_c4.3_long <- cumt(output2_sim_c4.3_long)
#---1.2 with c4.3_long lifted
cum_t_no_c4.3 <- cumt(output2_no_c4.3)
#--2. Peak cases & time
#---2.1 baseline (all interventions in place)
pk_t_sim_c4.3_long_time <- pktime(output2_sim_c4.3_long)
pk_t_sim_c4.3_long_case <- pkcase(output2_sim_c4.3_long)
#---2.2 with c4.3 lifted
pk_t_no_c4.3_time <- pktime(output2_no_c4.3)
pk_t_no_c4.3_case <- pkcase(output2_no_c4.3)
###### PLOT
#--Empty plot
p0 <- ggplot()+
theme(element_rect()); p0
###### PLOT
#--Empty plot
p0 <- ggplot()+
theme(element_rect(fill = 'white')); p0
###### PLOT
#--Empty plot
p0 <- ggplot()+
theme(plot.background=element_rect(fill = 'white')); p0
###### PLOT
#--Empty plot
p0 <- ggplot()+
theme(panel.background = element_blank()); p0
grid.arrange(p4.3, p4.3_long, p4.4, p0, nrow=2, ncol=2, left = yleft, bottom = bottom, respect = T)
